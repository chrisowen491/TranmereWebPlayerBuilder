AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  The tranmere web player builder stack

Globals:
  Function:
    Timeout: 3
    AutoPublishAlias: live

Parameters:
  Deployment:
    Type: String
    Default: Canary10Percent5Minutes
  S3BucketName:
    Type: String
  OpenAPIFile:
    Type: String
    Default: openapi.yaml
  EnvName:
    Type: String
    Default: sit1
    Description: The name of the environment to deploy to
    AllowedValues:
      - local
      - ci1      
      - sit1
      - pre1
      - prod1

Resources:     

  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      Cors:
        AllowOrigin: "'*'"
      StageName: Prod
      Name: PlayerBuilder

      Auth:
        ApiKeyRequired: true

      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: 
              Fn::Join:
              - ''
              - - s3://
                - Ref: S3BucketName
                - /
                - Ref: OpenAPIFile

  PlayerBuilder:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: PlayerBuilder.handler
      Runtime: nodejs12.x
      DeploymentPreference:
        Type: !Ref Deployment
        Alarms:
          - !Ref AliasErrorMetricGreaterThanZeroAlarm
          - !Ref LatestVersionErrorMetricGreaterThanZeroAlarm
      Tracing: Active  
      Environment:
        Variables:
          EnvironmentName: !Ref EnvName
      Events:
        PageRequest:
          Type: Api
          Properties:
            Path: /{kit}/{hair}/{body}/{features}/{hairColour}/{neckColour}/{background}/{highlights}
            RestApiId: !Ref RestApi
            Method: get

  AliasErrorMetricGreaterThanZeroAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: Lambda Function Error > 0
      AlarmActions:
        - !ImportValue cloudwatch-notifications-prod-SlackSNSTopic
      OKActions:
        - !ImportValue cloudwatch-notifications-prod-SlackSNSTopic
      InsufficientDataActions:
        - !ImportValue cloudwatch-notifications-prod-SlackSNSTopic
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Sub "${ PlayerBuilder}:live"
        - Name: FunctionName
          Value: !Ref PlayerBuilder
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
  LatestVersionErrorMetricGreaterThanZeroAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: Lambda Function Error > 0
      AlarmActions:
        - !ImportValue cloudwatch-notifications-prod-SlackSNSTopic
      OKActions:
        - !ImportValue cloudwatch-notifications-prod-SlackSNSTopic
      InsufficientDataActions:
        - !ImportValue cloudwatch-notifications-prod-SlackSNSTopic
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Ref PlayerBuilder.Version
        - Name: FunctionName
          Value: !Ref PlayerBuilder
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0

  # This shouldn't be necerssary, but API Gateway often seems to lack permission on the lambda when using swagger definitions
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      SourceArn: 
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/GET/*/*/*/*
      FunctionName: !Ref PlayerBuilder
      Principal: apigateway.amazonaws.com

  StagingBasePathMapping:
    DependsOn: RestApiProdStage
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: builder
      DomainName: !Sub "api.${EnvName}.tranmere-web.com"
      RestApiId: !Ref RestApi
      Stage: Prod

Transform:
  - AWS::Serverless-2016-10-31
  - Name: DatadogCfnMacro
      Parameters:
      # Send custom metrics via logs with the help of Datadog Forwarder Lambda function (recommended). Defaults to false.
      flushMetricsToLogs: true
      # Enable tracing on Lambda function using dd-trace, Datadog's APM library. Requires Datadog Log Forwarder to be set up. Defaults to true.
      enableDDTracing: true
       # When set, the macro will try to subscribe the Lambda's CloudWatch log groups to the Forwarder with the given ARN.
      forwarderArn: "arn:aws:lambda:<REGION>:<ACCOUNT-ID>:function:datadog-forwarder"
      # The name of the CloudFormation stack being deployed. Only required when a forwarderArn is provided and Lambda functions are dynamically named (when the `FunctionName` property isn't provided for a Lambda). 
      stackName: !Ref "AWS::StackName"
      # When set, the macro will add a `service` tag to all Lambda functions with the provided value.
      service: "my-sam-app"
      [...]

Outputs:
  Endpoint:
    Description: "API Gateway endpoint URL the endpoint"
    Value: !Sub "https://api.${EnvName}.tranmere-web.com/builder/"
